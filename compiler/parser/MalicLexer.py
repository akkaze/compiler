# Generated from Malic.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\29")
        buf.write("\u0158\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7")
        buf.write("\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13")
        buf.write("\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37")
        buf.write("\3 \3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3&\3&\3")
        buf.write("&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3,\3,\3-\3")
        buf.write("-\3-\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60")
        buf.write("\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\63\3\63\7\63\u011c\n\63\f\63\16\63\u011f\13\63\3\63")
        buf.write("\3\63\3\64\3\64\3\64\5\64\u0126\n\64\3\65\3\65\7\65\u012a")
        buf.write("\n\65\f\65\16\65\u012d\13\65\3\66\3\66\7\66\u0131\n\66")
        buf.write("\f\66\16\66\u0134\13\66\3\66\5\66\u0137\n\66\3\67\6\67")
        buf.write("\u013a\n\67\r\67\16\67\u013b\3\67\3\67\38\38\38\38\78")
        buf.write("\u0144\n8\f8\168\u0147\138\38\38\38\38\38\39\39\39\39")
        buf.write("\79\u0152\n9\f9\169\u0155\139\39\39\3\u0145\2:\3\3\5\4")
        buf.write("\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write("\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write("\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-")
        buf.write("Y.[/]\60_\61a\62c\63e\64g\2i\65k\66m\67o8q9\3\2\n\6\2")
        buf.write("\f\f\17\17$$^^\5\2$$^^pp\5\2C\\aac|\6\2\62;C\\aac|\3\2")
        buf.write("\63;\3\2\62;\5\2\13\f\17\17\"\"\4\2\f\f\17\17\u015e\2")
        buf.write("\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write("\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write("\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2")
        buf.write("\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%")
        buf.write("\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2i\3")
        buf.write("\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\3s")
        buf.write("\3\2\2\2\5y\3\2\2\2\7{\3\2\2\2\t}\3\2\2\2\13\177\3\2\2")
        buf.write("\2\r\u0081\3\2\2\2\17\u0083\3\2\2\2\21\u0085\3\2\2\2\23")
        buf.write("\u0087\3\2\2\2\25\u008c\3\2\2\2\27\u0090\3\2\2\2\31\u0097")
        buf.write("\3\2\2\2\33\u009c\3\2\2\2\35\u009e\3\2\2\2\37\u00a0\3")
        buf.write("\2\2\2!\u00a3\3\2\2\2#\u00a8\3\2\2\2%\u00ac\3\2\2\2\'")
        buf.write("\u00b2\3\2\2\2)\u00b9\3\2\2\2+\u00bf\3\2\2\2-\u00c8\3")
        buf.write("\2\2\2/\u00ca\3\2\2\2\61\u00ce\3\2\2\2\63\u00d1\3\2\2")
        buf.write("\2\65\u00d4\3\2\2\2\67\u00d6\3\2\2\29\u00d8\3\2\2\2;\u00da")
        buf.write("\3\2\2\2=\u00dc\3\2\2\2?\u00de\3\2\2\2A\u00e0\3\2\2\2")
        buf.write("C\u00e2\3\2\2\2E\u00e5\3\2\2\2G\u00e8\3\2\2\2I\u00ea\3")
        buf.write("\2\2\2K\u00ec\3\2\2\2M\u00ef\3\2\2\2O\u00f2\3\2\2\2Q\u00f5")
        buf.write("\3\2\2\2S\u00f8\3\2\2\2U\u00fa\3\2\2\2W\u00fc\3\2\2\2")
        buf.write("Y\u00fe\3\2\2\2[\u0101\3\2\2\2]\u0104\3\2\2\2_\u0109\3")
        buf.write("\2\2\2a\u010e\3\2\2\2c\u0114\3\2\2\2e\u0119\3\2\2\2g\u0125")
        buf.write("\3\2\2\2i\u0127\3\2\2\2k\u0136\3\2\2\2m\u0139\3\2\2\2")
        buf.write("o\u013f\3\2\2\2q\u014d\3\2\2\2st\7e\2\2tu\7n\2\2uv\7c")
        buf.write("\2\2vw\7u\2\2wx\7u\2\2x\4\3\2\2\2yz\7}\2\2z\6\3\2\2\2")
        buf.write("{|\7\177\2\2|\b\3\2\2\2}~\7*\2\2~\n\3\2\2\2\177\u0080")
        buf.write("\7.\2\2\u0080\f\3\2\2\2\u0081\u0082\7+\2\2\u0082\16\3")
        buf.write("\2\2\2\u0083\u0084\7?\2\2\u0084\20\3\2\2\2\u0085\u0086")
        buf.write("\7=\2\2\u0086\22\3\2\2\2\u0087\u0088\7d\2\2\u0088\u0089")
        buf.write("\7q\2\2\u0089\u008a\7q\2\2\u008a\u008b\7n\2\2\u008b\24")
        buf.write("\3\2\2\2\u008c\u008d\7k\2\2\u008d\u008e\7p\2\2\u008e\u008f")
        buf.write("\7v\2\2\u008f\26\3\2\2\2\u0090\u0091\7u\2\2\u0091\u0092")
        buf.write("\7v\2\2\u0092\u0093\7t\2\2\u0093\u0094\7k\2\2\u0094\u0095")
        buf.write("\7p\2\2\u0095\u0096\7i\2\2\u0096\30\3\2\2\2\u0097\u0098")
        buf.write("\7x\2\2\u0098\u0099\7q\2\2\u0099\u009a\7k\2\2\u009a\u009b")
        buf.write("\7f\2\2\u009b\32\3\2\2\2\u009c\u009d\7]\2\2\u009d\34\3")
        buf.write("\2\2\2\u009e\u009f\7_\2\2\u009f\36\3\2\2\2\u00a0\u00a1")
        buf.write("\7k\2\2\u00a1\u00a2\7h\2\2\u00a2 \3\2\2\2\u00a3\u00a4")
        buf.write("\7g\2\2\u00a4\u00a5\7n\2\2\u00a5\u00a6\7u\2\2\u00a6\u00a7")
        buf.write("\7g\2\2\u00a7\"\3\2\2\2\u00a8\u00a9\7h\2\2\u00a9\u00aa")
        buf.write("\7q\2\2\u00aa\u00ab\7t\2\2\u00ab$\3\2\2\2\u00ac\u00ad")
        buf.write("\7y\2\2\u00ad\u00ae\7j\2\2\u00ae\u00af\7k\2\2\u00af\u00b0")
        buf.write("\7n\2\2\u00b0\u00b1\7g\2\2\u00b1&\3\2\2\2\u00b2\u00b3")
        buf.write("\7t\2\2\u00b3\u00b4\7g\2\2\u00b4\u00b5\7v\2\2\u00b5\u00b6")
        buf.write("\7w\2\2\u00b6\u00b7\7t\2\2\u00b7\u00b8\7p\2\2\u00b8(\3")
        buf.write("\2\2\2\u00b9\u00ba\7d\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc")
        buf.write("\7g\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be\7m\2\2\u00be*\3")
        buf.write("\2\2\2\u00bf\u00c0\7e\2\2\u00c0\u00c1\7q\2\2\u00c1\u00c2")
        buf.write("\7p\2\2\u00c2\u00c3\7v\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5")
        buf.write("\7p\2\2\u00c5\u00c6\7w\2\2\u00c6\u00c7\7g\2\2\u00c7,\3")
        buf.write("\2\2\2\u00c8\u00c9\7\60\2\2\u00c9.\3\2\2\2\u00ca\u00cb")
        buf.write("\7p\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7y\2\2\u00cd\60")
        buf.write("\3\2\2\2\u00ce\u00cf\7-\2\2\u00cf\u00d0\7-\2\2\u00d0\62")
        buf.write("\3\2\2\2\u00d1\u00d2\7/\2\2\u00d2\u00d3\7/\2\2\u00d3\64")
        buf.write("\3\2\2\2\u00d4\u00d5\7-\2\2\u00d5\66\3\2\2\2\u00d6\u00d7")
        buf.write("\7/\2\2\u00d78\3\2\2\2\u00d8\u00d9\7\u0080\2\2\u00d9:")
        buf.write("\3\2\2\2\u00da\u00db\7#\2\2\u00db<\3\2\2\2\u00dc\u00dd")
        buf.write("\7,\2\2\u00dd>\3\2\2\2\u00de\u00df\7\61\2\2\u00df@\3\2")
        buf.write("\2\2\u00e0\u00e1\7\'\2\2\u00e1B\3\2\2\2\u00e2\u00e3\7")
        buf.write(">\2\2\u00e3\u00e4\7>\2\2\u00e4D\3\2\2\2\u00e5\u00e6\7")
        buf.write("@\2\2\u00e6\u00e7\7@\2\2\u00e7F\3\2\2\2\u00e8\u00e9\7")
        buf.write(">\2\2\u00e9H\3\2\2\2\u00ea\u00eb\7@\2\2\u00ebJ\3\2\2\2")
        buf.write("\u00ec\u00ed\7@\2\2\u00ed\u00ee\7?\2\2\u00eeL\3\2\2\2")
        buf.write("\u00ef\u00f0\7>\2\2\u00f0\u00f1\7?\2\2\u00f1N\3\2\2\2")
        buf.write("\u00f2\u00f3\7?\2\2\u00f3\u00f4\7?\2\2\u00f4P\3\2\2\2")
        buf.write("\u00f5\u00f6\7#\2\2\u00f6\u00f7\7?\2\2\u00f7R\3\2\2\2")
        buf.write("\u00f8\u00f9\7(\2\2\u00f9T\3\2\2\2\u00fa\u00fb\7`\2\2")
        buf.write("\u00fbV\3\2\2\2\u00fc\u00fd\7~\2\2\u00fdX\3\2\2\2\u00fe")
        buf.write("\u00ff\7(\2\2\u00ff\u0100\7(\2\2\u0100Z\3\2\2\2\u0101")
        buf.write("\u0102\7~\2\2\u0102\u0103\7~\2\2\u0103\\\3\2\2\2\u0104")
        buf.write("\u0105\7v\2\2\u0105\u0106\7j\2\2\u0106\u0107\7k\2\2\u0107")
        buf.write("\u0108\7u\2\2\u0108^\3\2\2\2\u0109\u010a\7v\2\2\u010a")
        buf.write("\u010b\7t\2\2\u010b\u010c\7w\2\2\u010c\u010d\7g\2\2\u010d")
        buf.write("`\3\2\2\2\u010e\u010f\7h\2\2\u010f\u0110\7c\2\2\u0110")
        buf.write("\u0111\7n\2\2\u0111\u0112\7u\2\2\u0112\u0113\7g\2\2\u0113")
        buf.write("b\3\2\2\2\u0114\u0115\7p\2\2\u0115\u0116\7w\2\2\u0116")
        buf.write("\u0117\7n\2\2\u0117\u0118\7n\2\2\u0118d\3\2\2\2\u0119")
        buf.write("\u011d\7$\2\2\u011a\u011c\5g\64\2\u011b\u011a\3\2\2\2")
        buf.write("\u011c\u011f\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3")
        buf.write("\2\2\2\u011e\u0120\3\2\2\2\u011f\u011d\3\2\2\2\u0120\u0121")
        buf.write("\7$\2\2\u0121f\3\2\2\2\u0122\u0126\n\2\2\2\u0123\u0124")
        buf.write("\7^\2\2\u0124\u0126\t\3\2\2\u0125\u0122\3\2\2\2\u0125")
        buf.write("\u0123\3\2\2\2\u0126h\3\2\2\2\u0127\u012b\t\4\2\2\u0128")
        buf.write("\u012a\t\5\2\2\u0129\u0128\3\2\2\2\u012a\u012d\3\2\2\2")
        buf.write("\u012b\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012cj\3\2\2")
        buf.write("\2\u012d\u012b\3\2\2\2\u012e\u0132\t\6\2\2\u012f\u0131")
        buf.write("\t\7\2\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2\u0132")
        buf.write("\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0137\3\2\2\2")
        buf.write("\u0134\u0132\3\2\2\2\u0135\u0137\7\62\2\2\u0136\u012e")
        buf.write("\3\2\2\2\u0136\u0135\3\2\2\2\u0137l\3\2\2\2\u0138\u013a")
        buf.write("\t\b\2\2\u0139\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b")
        buf.write("\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013c\u013d\3\2\2\2")
        buf.write("\u013d\u013e\b\67\2\2\u013en\3\2\2\2\u013f\u0140\7\61")
        buf.write("\2\2\u0140\u0141\7,\2\2\u0141\u0145\3\2\2\2\u0142\u0144")
        buf.write("\13\2\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145")
        buf.write("\u0146\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0148\3\2\2\2")
        buf.write("\u0147\u0145\3\2\2\2\u0148\u0149\7,\2\2\u0149\u014a\7")
        buf.write("\61\2\2\u014a\u014b\3\2\2\2\u014b\u014c\b8\2\2\u014cp")
        buf.write("\3\2\2\2\u014d\u014e\7\61\2\2\u014e\u014f\7\61\2\2\u014f")
        buf.write("\u0153\3\2\2\2\u0150\u0152\n\t\2\2\u0151\u0150\3\2\2\2")
        buf.write("\u0152\u0155\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3")
        buf.write("\2\2\2\u0154\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156\u0157")
        buf.write("\b9\2\2\u0157r\3\2\2\2\13\2\u011d\u0125\u012b\u0132\u0136")
        buf.write("\u013b\u0145\u0153\3\b\2\2")
        return buf.getvalue()


class MalicLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    StringLiteral = 50
    Identifier = 51
    DecimalInteger = 52
    WS = 53
    BLOCK_COMMENT = 54
    LINE_COMMENT = 55

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'class'", "'{'", "'}'", "'('", "','", "')'", "'='", "';'", 
            "'bool'", "'int'", "'string'", "'void'", "'['", "']'", "'if'", 
            "'else'", "'for'", "'while'", "'return'", "'break'", "'continue'", 
            "'.'", "'new'", "'++'", "'--'", "'+'", "'-'", "'~'", "'!'", 
            "'*'", "'/'", "'%'", "'<<'", "'>>'", "'<'", "'>'", "'>='", "'<='", 
            "'=='", "'!='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'this'", 
            "'true'", "'false'", "'null'" ]

    symbolicNames = [ "<INVALID>",
            "StringLiteral", "Identifier", "DecimalInteger", "WS", "BLOCK_COMMENT", 
            "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "StringLiteral", 
                  "StringCharacter", "Identifier", "DecimalInteger", "WS", 
                  "BLOCK_COMMENT", "LINE_COMMENT" ]

    grammarFileName = "Malic.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


